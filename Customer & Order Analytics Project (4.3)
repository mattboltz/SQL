-- Look at 5 rows of data from the JanSales table
SELECT *
FROM BIT_DB.JanSales
LIMIT 5;

-- Look at 5 rows of data from the customers table
SELECT *
FROM BIT_DB.customers
LIMIT 5;

-- How many orders were placed in January?
SELECT COUNT(orderid)
FROM BIT_DB.JanSales
WHERE length(orderid) = 6
AND orderid <> 'Order ID';

-- How many of the orders placed in January were for an iPhone?
SELECT COUNT(orderid)
FROM BIT_DB.JanSales
WHERE product = 'iPhone'
AND length(orderid) = 6
AND orderid <> 'Order ID';

-- Select the customer account numbers for all the orders that were placed in February.
SELECT DISTINCT acctnum
FROM BIT_DB.FebSales feb
INNER JOIN BIT_DB.customers cust
ON feb.orderid = cust.order_id
WHERE length(feb.orderid) = 6
AND feb.orderid <> 'Order ID';

-- Which product was the cheapest one sold in January, and what was the price?
SELECT DISTINCT product, price
FROM BIT_DB.JanSales
WHERE length(orderid) = 6
AND orderid <> 'Order ID'
AND price in (SELECT min(price) FROM BIT_DB.JanSales);

-- What is the total revenue for each product sold in January?
SELECT product, round(sum(quantity) * price,2) as revenue
FROM BIT_DB.JanSales
WHERE length(orderid) = 6
AND orderid <> 'Order ID'
GROUP BY product;

-- Which products were sold in February at 548 Lincoln St, Seattle, WA 98101,
-- how many of each were sold, and what was the total revenue?
SELECT DISTINCT product, sum(quantity) as total_quantity, round(sum(quantity) * price,2) as revenue
FROM BIT_DB.FebSales
WHERE location = '548 Lincoln St, Seattle, WA 98101'
AND length(orderid) = 6
AND orderid <> 'Order ID'
GROUP BY product;

-- How many customers ordered more than 2 products at a time in February,
-- and what was the average amount spent for those customers?
SELECT COUNT(DISTINCT cust.acctnum),
avg(feb.quantity*feb.price)
FROM BIT_DB.FebSales as feb
LEFT JOIN BIT_DB.customers as cust
ON feb.orderid = cust.order_id
WHERE feb.quantity > 2
AND length(orderid) = 6
AND orderid <> 'Order ID';
